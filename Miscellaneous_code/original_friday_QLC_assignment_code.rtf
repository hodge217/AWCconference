{\rtf1\ansi\ansicpg1252\cocoartf2820
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue255;\red45\green45\blue45;
\red0\green0\blue0;\red0\green0\blue255;\red101\green76\blue29;\red0\green0\blue109;\red32\green108\blue135;
\red144\green1\blue18;\red157\green0\blue210;\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c23137\c23137\c23137;
\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c100000;\cssrgb\c47451\c36863\c14902;\cssrgb\c0\c6275\c50196;\cssrgb\c14902\c49804\c60000;
\cssrgb\c63922\c8235\c8235;\cssrgb\c68627\c0\c85882;\cssrgb\c3529\c52549\c34510;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Create a new dataset with all the people:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 participants_df \strokec5 =\strokec4  expanded_query_critiques.copy()\cb1 \
\cb3 slots_df \strokec5 =\strokec4  times_friday2\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Helper function to check slot compatibility\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 def\cf4 \strokec4  \cf7 \strokec7 is_slot_compatible\cf4 \strokec4 (\cf8 \strokec8 participant\cf4 \strokec4 , \cf8 \strokec8 slot\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 # Check if at least one genre matches\cf4 \cb1 \strokec4 \
\cb3     participant_fiction_genres \strokec5 =\strokec4  \cf9 \strokec9 set\cf4 \strokec4 (participant[\cf10 \strokec10 'fiction_genre'\cf4 \strokec4 ])\cb1 \
\cb3     slot_fiction_genres \strokec5 =\strokec4  \cf9 \strokec9 set\cf4 \strokec4 (slot[\cf10 \strokec10 'combined_fiction'\cf4 \strokec4 ])\cb1 \
\
\cb3     participant_nonfiction_genres \strokec5 =\strokec4  \cf9 \strokec9 set\cf4 \strokec4 (participant[\cf10 \strokec10 'nonfiction_genre'\cf4 \strokec4 ])\cb1 \
\cb3     slot_nonfiction_genres \strokec5 =\strokec4  \cf9 \strokec9 set\cf4 \strokec4 (slot[\cf10 \strokec10 'combined_nonfiction'\cf4 \strokec4 ])\cb1 \
\
\cb3     \cf11 \strokec11 if\cf4 \strokec4  \cf6 \strokec6 not\cf4 \strokec4  (participant_fiction_genres \strokec5 &\strokec4  slot_fiction_genres \cf6 \strokec6 or\cf4 \strokec4  participant_nonfiction_genres \strokec5 &\strokec4  slot_nonfiction_genres):\cb1 \
\cb3         \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Incompatible due to genres."\cf4 \strokec4 ) \cb1 \
\cb3         \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Participant fiction genres: \cf6 \strokec6 \{\cf4 \strokec4 participant_fiction_genres\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 )\cb1 \
\cb3         \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Publisher fiction genres: \cf6 \strokec6 \{\cf4 \strokec4 slot_fiction_genres\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 )\cb1 \
\cb3         \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Participant nonfiction genres: \cf6 \strokec6 \{\cf4 \strokec4 participant_nonfiction_genres\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 ) \cb1 \
\cb3         \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Publisher nonfiction genres: \cf6 \strokec6 \{\cf4 \strokec4 slot_nonfiction_genres\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 )\cb1 \
\cb3         \cf11 \strokec11 return\cf4 \strokec4  \cf6 \strokec6 False\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 # Check publisher overlap\cf4 \cb1 \strokec4 \
\cb3     participant_pubs \strokec5 =\strokec4  \cf9 \strokec9 set\cf4 \strokec4 (participant[\cf10 \strokec10 'chosen_pubs'\cf4 \strokec4 ])\cb1 \
\cb3     slot_pubs \strokec5 =\strokec4  \{slot[\cf10 \strokec10 'pubname1'\cf4 \strokec4 ], slot[\cf10 \strokec10 'pubname2'\cf4 \strokec4 ]\}\cb1 \
\cb3     \cf11 \strokec11 if\cf4 \strokec4  participant_pubs.intersection(slot_pubs):\cb1 \
\cb3         \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Incompatible due to publisher overlap. Participant publishers: \cf6 \strokec6 \{\cf4 \strokec4 participant_pubs\cf6 \strokec6 \}\cf10 \strokec10 , Slot publishers: \cf6 \strokec6 \{\cf4 \strokec4 slot_pubs\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 )\cb1 \
\cb3         \cf11 \strokec11 return\cf4 \strokec4  \cf6 \strokec6 False\cf4 \cb1 \strokec4 \
\
\cb3     \cf11 \strokec11 return\cf4 \strokec4  \cf6 \strokec6 True\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Iterate through slots and assign participants\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 for\cf4 \strokec4  _, slot \cf11 \strokec11 in\cf4 \strokec4  slots_df.iterrows():\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf11 \strokec11 if\cf4 \strokec4  participants_df.empty:\cb1 \
\cb3         \cf11 \strokec11 break\cf4 \strokec4   \cf2 \strokec2 # Exit if no participants are left to assign\cf4 \cb1 \strokec4 \
\
\cb3     \cf11 \strokec11 for\cf4 \strokec4  index, participant \cf11 \strokec11 in\cf4 \strokec4  participants_df.iterrows():\cb1 \
\cb3         \cf2 \strokec2 # Skip participants already assigned to conflicting slots\cf4 \cb1 \strokec4 \
\cb3         assigned_slots \strokec5 =\strokec4  [a[\cf10 \strokec10 'timeslot_start'\cf4 \strokec4 ] \cf11 \strokec11 for\cf4 \strokec4  a \cf11 \strokec11 in\cf4 \strokec4  assignments \cf11 \strokec11 if\cf4 \strokec4  a[\cf10 \strokec10 'Email'\cf4 \strokec4 ] \strokec5 ==\strokec4  participant[\cf10 \strokec10 'Email'\cf4 \strokec4 ]]\cb1 \
\cb3         \cf11 \strokec11 if\cf4 \strokec4  \cf7 \strokec7 any\cf4 \strokec4 (\cf7 \strokec7 abs\cf4 \strokec4 (slot[\cf10 \strokec10 'timeslot_start'\cf4 \strokec4 ] \strokec5 -\strokec4  assigned) \strokec5 <=\strokec4  timedelta(\cf8 \strokec8 minutes\cf4 \strokec5 =\cf12 \strokec12 15\cf4 \strokec4 ) \cf11 \strokec11 for\cf4 \strokec4  assigned \cf11 \strokec11 in\cf4 \strokec4  assigned_slots):\cb1 \
\cb3             \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Participant \cf6 \strokec6 \{\cf4 \strokec4 participant[\cf10 \strokec10 'Email'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10  skipped due to conflicting time slot."\cf4 \strokec4 )\cb1 \
\cb3             \cf11 \strokec11 continue\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 # Check slot compatibility\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 if\cf4 \strokec4  is_slot_compatible(participant, slot):\cb1 \
\cb3             assignments.append(\{\cb1 \
\cb3                 \cf10 \strokec10 'Email'\cf4 \strokec4 : participant[\cf10 \strokec10 'Email'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'timeslot_start'\cf4 \strokec4 : slot[\cf10 \strokec10 'timeslot_start'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'room_name'\cf4 \strokec4 : slot[\cf10 \strokec10 'room_name'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'pubname1'\cf4 \strokec4 : slot[\cf10 \strokec10 'pubname1'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'pubname2'\cf4 \strokec4 : slot[\cf10 \strokec10 'pubname2'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'participant_fiction_genre'\cf4 \strokec4 : \cf10 \strokec10 ', '\cf4 \strokec4 .join(participant[\cf10 \strokec10 'fiction_genre'\cf4 \strokec4 ]),\cb1 \
\cb3                 \cf10 \strokec10 'participant_nonfiction_genre'\cf4 \strokec4 : \cf10 \strokec10 ', '\cf4 \strokec4 .join(participant[\cf10 \strokec10 'nonfiction_genre'\cf4 \strokec4 ]),\cb1 \
\cb3                 \cf10 \strokec10 'publisher_fiction_genre'\cf4 \strokec4 : slot[\cf10 \strokec10 'combined_fiction'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'publisher_nonfiction_genre'\cf4 \strokec4 : slot[\cf10 \strokec10 'combined_nonfiction'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'workshop'\cf4 \strokec4 : participant[\cf10 \strokec10 'Friday_workshop'\cf4 \strokec4 ],\cb1 \
\cb3                 \cf10 \strokec10 'virtual'\cf4 \strokec4 :participant[\cf10 \strokec10 'Virtual'\cf4 \strokec4 ]\cb1 \
\cb3             \})\cb1 \
\
\cb3             \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Assigned \cf6 \strokec6 \{\cf4 \strokec4 participant[\cf10 \strokec10 'Email'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10  to \cf6 \strokec6 \{\cf4 \strokec4 slot[\cf10 \strokec10 'timeslot_start'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10  in room \cf6 \strokec6 \{\cf4 \strokec4 slot[\cf10 \strokec10 'room_name'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 )\cb1 \
\
\cb3             \cf2 \strokec2 # Remove the assigned participant row\cf4 \cb1 \strokec4 \
\cb3             participants_df.drop(index, \cf8 \strokec8 inplace\cf4 \strokec5 =\cf6 \strokec6 True\cf4 \strokec4 )\cb1 \
\cb3             \cf11 \strokec11 break\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 else\cf4 \strokec4 :\cb1 \
\cb3                 \cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 f\cf10 \strokec10 "Participant \cf6 \strokec6 \{\cf4 \strokec4 participant[\cf10 \strokec10 'Email'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10  not compatible with slot \cf6 \strokec6 \{\cf4 \strokec4 slot[\cf10 \strokec10 'timeslot_start'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10  in room \cf6 \strokec6 \{\cf4 \strokec4 slot[\cf10 \strokec10 'room_name'\cf4 \strokec4 ]\cf6 \strokec6 \}\cf10 \strokec10 "\cf4 \strokec4 )\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Convert assignments to a DataFrame\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 assignments_df \strokec5 =\strokec4  pd.DataFrame(assignments)\cb1 \
}